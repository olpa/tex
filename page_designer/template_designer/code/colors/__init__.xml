<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE document PUBLIC "+//IDN docutils.sourceforge.net//DTD Docutils Generic//EN//XML" "http://docutils.sourceforge.net/docs/ref/docutils.dtd">
<!-- Generated by Docutils 0.5 -->
<document source="__init__.py"><paragraph>#!/usr/bin/env python
# -<emphasis>- coding: utf-8 -</emphasis>-</paragraph><paragraph>&quot;&quot;&quot;
This color package enables conversion of given color values in an easy way.
Some calling examples</paragraph><doctest_block xml:space="preserve">&gt;&gt;&gt; #import
&gt;&gt;&gt; from colors import colors</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Initialize object
&gt;&gt;&gt; myColor=colors(&quot;Gold&quot;)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Hex value as string
&gt;&gt;&gt; myColor.getHex()                      # &quot;#FFD700&quot;</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Cmyk value as tuple of integers. Value base is 255
&gt;&gt;&gt; myColor.getCmyk()                     # (0, 40, 255, 0)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Cmyk value as tuple of integers. Value base is 100
&gt;&gt;&gt; myColor.getCmyk100()                  # (0, 15, 100, 0)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Cmyk value as tuple of floats. Value base is 1
&gt;&gt;&gt; myColor.getCmyk1()                    # (0.0, 0.15686274509803921, 1.0, 0.0)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Rgb value as tuple of integers. Value base is 255
&gt;&gt;&gt; myColor.getRgb()                      # (255, 215, 0)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Rgb value as tuple of integers. Value base is 100
&gt;&gt;&gt; myColor.getRgb100()                   # (100, 84, 0)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get converted Rgb value as tuple of floats. Value base is 1
&gt;&gt;&gt; myColor.getRgb1()                     # (1.0, 0.84313725490196079, 0.0)</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Get the name of the color as string
&gt;&gt;&gt; #This function uses the X11 color name definition 1.2
&gt;&gt;&gt; If no color name is defined, then the method returns None
&gt;&gt;&gt; myColor.getName()                     # &quot;Gold&quot;</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; Get all calculated values as dictianary
&gt;&gt;&gt; myColor.getAll()
{   &quot;name&quot;   : &quot;Gold&quot;,
    &quot;rgb1&quot;   : (1.0, 0.84313725490196079, 0.0),
    &quot;cmyk1&quot;  : (0.0, 0.15686274509803921, 1.0, 0.0),
    &quot;hex&quot;    : &quot;#FFD700&quot;, &quot;cmyk100&quot;: (0, 15, 100, 0),
    &quot;cmyk&quot;   : (0, 40, 255, 0),
    &quot;rgb&quot;    : (255, 215, 0),
    &quot;rgb100&quot; : (100, 84, 0)}</doctest_block><doctest_block xml:space="preserve">&gt;&gt;&gt; #Redefine color. Some examples now.
&gt;&gt;&gt; #If you define rgb or cmyk values, then only values with base of 255
&gt;&gt;&gt; #are correctly calculated for now.
&gt;&gt;&gt; myColor.setColor(&quot;LightGoldenrodYellow&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;rgb 123 45 67&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;rgb(76,54,321)&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;cmyk ( 170 160 130 120 )&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;cmyk 60,70,80,90&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;#ffa500&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;# aa cc 66&quot;)
&gt;&gt;&gt; myColor.setColor(&quot;#(12 34 56)&quot;)</doctest_block><paragraph>&quot;&quot;&quot;</paragraph><paragraph>import gettext
trans = gettext.translation(domain=&quot;colors&quot;, localedir=&quot;i18n&quot;, fallback=True)
trans.install(&quot;colors&quot;)</paragraph><paragraph>from colors import colors</paragraph><definition_list><definition_list_item><term>class main(colors):</term><definition><definition_list><definition_list_item><term>def __init__(self):</term><definition><paragraph>pass</paragraph></definition></definition_list_item></definition_list></definition></definition_list_item></definition_list><paragraph>main()</paragraph></document>